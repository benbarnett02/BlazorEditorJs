/**
 * Skipped minification because the original files appears to be already minified.
 * Original file: /npm/@editorjs/opensea@1.0.2/dist/OpenseaTool.umd.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
(function(){"use strict";try{if(typeof document!="undefined"){var e=document.createElement("style");e.appendChild(document.createTextNode("._opensea-tool_76yf4_1{margin:1em auto}")),document.head.appendChild(e)}}catch(t){console.error("vite-plugin-css-injected-by-js",t)}})();
(function(t,e){typeof exports=="object"&&typeof module<"u"?module.exports=e():typeof define=="function"&&define.amd?define(e):(t=typeof globalThis<"u"?globalThis:t||self,t.OpenseaTool=e())})(this,function(){"use strict";var o=Object.defineProperty;var p=(t,e,i)=>e in t?o(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var r=(t,e,i)=>(p(t,typeof e!="symbol"?e+"":e,i),i);const t={"opensea-tool":"_opensea-tool_76yf4_1"};class e{constructor({data:n,config:a,api:s,readOnly:d}){r(this,"api");r(this,"readOnly");r(this,"data");r(this,"config");r(this,"nodes");this.data=n,this.config=a,this.api=s,this.readOnly=d,this.nodes={wrapper:null,nftCard:null}}static prepare(){const n="https://unpkg.com/embeddable-nfts/dist/nft-card.min.js";if(!document.querySelector(`script[src="${n}"]`)){const s=document.createElement("script");s.src=n,document.head.appendChild(s)}}render(){return this.nodes.wrapper=document.createElement("div"),this.nodes.wrapper.classList.add(t["opensea-tool"]),this.data.contractAddress&&this.data.tokenId&&this.renderNftCard(),this.nodes.wrapper}save(){return this.data}onPaste(n){const{data:a}=n.detail,s=a.match(e.regexp);if(!s||s.length<4){this.api.notifier.show({message:"Bad opensea item URL",style:"error"});return}this.data={coin:s[1],contractAddress:s[2],tokenId:s[3]},this.renderNftCard()}static get pasteConfig(){return{patterns:{opensea:e.regexp}}}static get isReadOnlySupported(){return!0}static get regexp(){return/^https:\/\/opensea\.io\/assets\/([a-zA-Z]+)\/([A-Za-z0-9]+)\/([A-Za-z0-9]+)$/i}renderNftCard(){this.nodes.nftCard=document.createElement("nft-card"),this.nodes.nftCard.setAttribute("contractAddress",this.data.contractAddress),this.nodes.nftCard.setAttribute("tokenId",this.data.tokenId),this.nodes.wrapper?(this.nodes.wrapper.innerHTML="",this.nodes.wrapper.appendChild(this.nodes.nftCard)):this.api.notifier.show({message:"Wrapper is not initialized",style:"error"})}}return e});
